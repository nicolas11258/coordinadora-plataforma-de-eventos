-- Crear Evento
INSERT INTO event (title, description, date, location, fk_creator_id)
VALUES (:title, :description, :date, :location, :fk_creator_id);

-- Encontrar Evento por ID
SELECT id, title, description, date, location
FROM event
WHERE id = :eventId;

-- Actualizar Evento
UPDATE event
SET title = :title, 
    description = :description, 
    date = :date, 
    location = :location,
    updated_at = NOW()
WHERE id = :eventId;

-- Eliminar Evento
DELETE FROM event
WHERE id = :eventId;

-- Encontrar Todos los Eventos
SELECT id, title, description, date, location
FROM event;

-- Registrar Asistente a Evento
INSERT INTO event_attendee (fk_event_id, fk_user_id)
VALUES (:eventId, :userId);

-- Obtener Asistentes de un Evento
SELECT u.id, u.name, u.email
FROM "user" u
INNER JOIN event_attendee ea ON u.id = ea.fk_user_id
INNER JOIN event e ON ea.fk_event_id = e.id
WHERE e.id = :eventId;

-- Calcular Asistentes por Día
SELECT 
    EXTRACT(WEEK FROM e.date) AS week_number,
    EXTRACT(DOW FROM e.date) AS day_of_week,
    COUNT(*) AS attendees_count
FROM 
    event e
JOIN 
    event_attendee ea ON e.id = ea.fk_event_id
WHERE 
    e.id IN (:eventIds)
GROUP BY 
    EXTRACT(WEEK FROM e.date),
    EXTRACT(DOW FROM e.date)
ORDER BY 
    week_number, 
    day_of_week;

-- Encontrar Usuario por ID
SELECT id, name, email
FROM "user"
WHERE id = :userId;

-- Encontrar Usuario por Correo Electrónico
SELECT id, name, email
FROM "user"
WHERE email = :email;

-- Eliminar Usuario
DELETE FROM "user"
WHERE id = :userId;

-- Encontrar Todos los Usuarios
SELECT id, name, email
FROM "user";
